#!/bin/bash

set -x
set -e

export CUDA_HOME=/usr/local/cuda-7.5
export CLANG=clang++-3.8

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export COCL_HOME=$(dirname ${SCRIPT_DIR})

INCLUDES=
while getopts I: opt; do
    case $opt in
    I)
        INCLUDES="$INCLUDES -I$OPTARG"
        ;;
    esac
done
shift $((OPTIND - 1))

echo INCLUDES ${INCLUDES}
export INCLUDES

INFILE=$1

if [[ x$1 == x ]]; then {
    echo Usage: $0 [infile.cu]
    exit 1
} fi

BASENAME=$(basename -s .cu ${INFILE})
DIRNAME=$(dirname ${INFILE})
BASEPATH=${DIRNAME}/${BASENAME}

(cd ${COCL_HOME}
    make
)
make -f ${COCL_HOME}/src/cocl.Makefile ${BASEPATH}.o

set +x

echo ""
echo "    ${BASEPATH}.cu compiled into ${BASEPATH}.o"
echo ""
echo To finish off, you can do:
echo ""
echo "    g++ -o ${BASEPATH} ${BASEPATH}.o -L${COCL_HOME}/build -lcocl -lEasyCL -lOpenCL"
echo ""
echo "... which you can run like:"
echo
echo "    LD_LIBRARY_PATH=${COCL_HOME}/build:${LD_LIBRARY_PATH} ${BASEPATH}"
echo 
