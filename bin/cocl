#!/bin/bash

set -x
set -e

export CUDA_HOME=/usr/local/cuda-7.5
export CLANG=clang++-3.8

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export COCL_HOME=$(dirname ${SCRIPT_DIR})

INCLUDES=
unset OUTPATH
while getopts gco:I: opt; do
    case $opt in
    I)
        INCLUDES="$INCLUDES -I$OPTARG"
        ;;
    o)
        OUTPATH=$OPTARG
        ;;
    c)
        COMPILE=1
        ;;
    g)
        OPT_G=-g
        ;;
    esac
done
shift $((OPTIND - 1))

INFILE=$1

echo INCLUDES ${INCLUDES}
echo INFILE ${INFILE}
echo OUTPATH ${OUTPATH}
echo COMPILE ${COMPILE}
export INCLUDES

if [[ x$1 == x ]]; then {
    echo Usage: $0 [infile.cu]
    exit 1
} fi

INPUTBASENAME=$(basename -s .cu ${INFILE})
INPUTDIRNAME=$(dirname ${INFILE})
INPUTBASEPATH=${INPUTDIRNAME}/${INPUTBASENAME}

if [[ -v OUTPATH ]]; then {
    OUTFILE=${OUTPATH}
} else {
    OUTFILE=${INPUTBASEPATH}.o
} fi

OUTPUTBASENAME=$(basename -s .o ${OUTFILE})
OUTPUTDIRNAME=$(dirname ${OUTFILE})
OUTPUTBASEPATH=${OUTPUTDIRNAME}/${OUTPUTBASENAME}

(cd ${COCL_HOME}
    # make
)
OUTPUTBASEPATH=${OUTPUTBASEPATH} INPUTBASEPATH=${INPUTBASEPATH} OPT_G=${OPT_G} make -f ${COCL_HOME}/src/cocl.Makefile

if [[ -v COMPILE ]]; then {
    set +x
    echo ""
    echo "    ${INPUTBASEPATH}.cu compiled into ${OUTPUTBASEPATH}.o"
    echo ""
    echo To finish off, you can do:
    echo ""
    echo "    g++ -o ${OUTPUTBASEPATH} ${OUTPUTBASEPATH}.o -L${COCL_HOME}/build -lcocl -lEasyCL -lOpenCL"
    echo ""
    echo "... which you can run like:"
    echo
    echo "    LD_LIBRARY_PATH=${COCL_HOME}/build:${LD_LIBRARY_PATH} ${OUTPUTBASEPATH}"
    echo 
} else {
    g++ -o ${OUTPUTBASEPATH} ${OUTPUTBASEPATH}.o -L${COCL_HOME}/build -lcocl -lEasyCL -lOpenCL
    set +x
    echo ""
    echo "    ${INPUTBASEPATH}.cu compiled into ${OUTPUTBASEPATH}"
    echo ""
    echo "You can run by doing:"
    echo
    echo "    LD_LIBRARY_PATH=${COCL_HOME}/build:${LD_LIBRARY_PATH} ${OUTPUTBASEPATH}"
    echo 
} fi
